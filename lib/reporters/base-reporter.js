// Generated by CoffeeScript 1.6.3
var BaseReporter,
  __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

BaseReporter = (function() {
  function BaseReporter(emitter, stats, tests) {
    this.configureEmitter = __bind(this.configureEmitter, this);
    this.type = "base";
    this.stats = stats;
    this.tests = tests;
    this.configureEmitter(emitter);
  }

  BaseReporter.prototype.configureEmitter = function(emitter) {
    var _this = this;
    emitter.on('start', function(rawBlueprint, callback) {
      _this.stats.start = new Date;
      return callback();
    });
    emitter.on('end', function(callback) {
      _this.stats.end = new Date;
      _this.stats.duration = _this.stats.end - _this.stats.start;
      return callback();
    });
    emitter.on('test start', function(test) {
      _this.tests.push(test);
      _this.stats.tests += 1;
      return test['start'] = new Date;
    });
    emitter.on('test pass', function(test) {
      _this.stats.passes += 1;
      test['end'] = new Date;
      return test['duration'] = test.end - test.start;
    });
    emitter.on('test skip', function(test) {
      return _this.stats.skipped += 1;
    });
    emitter.on('test fail', function(test) {
      _this.stats.failures += 1;
      test['end'] = new Date;
      return test['duration'] = test.end - test.start;
    });
    return emitter.on('test error', function(error, test) {
      _this.stats.errors += 1;
      test['end'] = new Date;
      return test['duration'] = test.end - test.start;
    });
  };

  return BaseReporter;

})();

module.exports = BaseReporter;
